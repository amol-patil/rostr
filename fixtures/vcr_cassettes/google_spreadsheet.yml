---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/drive/v2/files/1_WVfnRMINBfH6NSUZ6XQh2QCoR7Eu1P_3tlLS8_PlLQ
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.6 Mac OS X/10.11.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.gQJ66VjWknx1BaV3wx-fW7ZX9kYuODN6LXP4l-8Rx2mTk0ef2gvlUpbYW_Z1SgX-NrBTaw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Sun, 07 Feb 2016 01:10:24 GMT
      Date:
      - Sun, 07 Feb 2016 01:10:24 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"c-g_a-1OtaH-kNQ4WBoXLp3Zv9s/MTQ1NDczMTAzODM3NA"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=1
      Alt-Svc:
      - quic=":443"; ma=604800; v="30,29,28,27,26,25"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAL1XW1MiOxB+51dQs1U+LXMB5FZFeUBxdUsQFNHi7CkqTjJD
        JDMZk8xw2fK/nyQzsAiuqw+LZaF2utNff+l8aX/m8sYMh9Bo5A3IcIK+eJgg
        46s0Y210JvcjL7zpXvba3kWld3s3rjwMpsXBKb2pdmKnPykJcnVbm/TJ1UCH
        IQF8FfjDcAv+BBScawEuCrPeoHzfpg9XUWmc1LnVHQ6c3pm76g5bq+uzbqnX
        +mHocI6Id4XDmdpiKkTEG5Y1n89Nn1KfIBBhbro0sDRWKylaCi63Po0SEIFY
        CATazQWpy7NkOhGPGAKQTxES3IKfSmQhiMVJzKOmRsvhLCUoeETwb6adioDo
        JOkxujTczcY5MX0ugMBuyqbMrj4I5sLCAfAlpSpu4jiTLSQTtW5Goa83FtM4
        eAwBJn+qxUMIcisRJz5sChajIwybnynoKGnaR7zZ6iLYC2lLfY0YcGinfTn6
        /tAZ20W+InP7tHMbH4+d2wfxTRzxVZMXi3YKFAvZ0hIgDV1AiLYFOEDDZaTN
        IIoIdiUZNLSSEGbQC9LMza3qdRwBj4hwGfUzl5fNKgBjSN0TDxCOvirbFEOI
        wlcmwYDc4bUbQ1ww7Iodc4LRXJsUUbn8i8rpSgjS70x+KLhF26kUbKdQcobF
        UuO41nBss16tjdO6KMQe3nUuFuzK0JbO1YZTM0vV8mvn9rKLPhRAABcjjfD9
        kLpZdkpZDsBmCO4HOfWqraqwnaFtN/S3adt2GpQgxuVpaL+abVe1MQIMhUJx
        /69kSvG/K12pxw3ykPzpahXLr3XMbp2HhTJdPZ3Z15W7Wb0/amXrf19xrAy6
        9XsQqcfnYfx+R8xvKBWbTsq/5PL/aflZRJTpTJs2FmghLJcnHxakdI+Tz97j
        NOycsgCIpsqnW377+i0K6gJSwGW1NEKhRBEHkphX9/CQKCnk+yhXODooCJVv
        D0QEvYOCUPn2QOjTkue0CIin3XiBeh520VsHFxDz8Ae4IHxhZEIac8T6iAWY
        Z+qiu39HQ36t62o/Ns4MRLJyg0piP1WPx/CiUw6+3Vyf9Z4urrO5Zi1DQapK
        BxGdTSXcWqdlNHsJ5yFiqUlkr6AiZ03Uc0wFaC8F4nccpfKpJViH9UCA1ips
        tAJK8n3ZDMTI9EX7vKfSOlGqURDziICl2lGtb22WqaJ8IGOGspOShpiRbcbI
        tJIxpjaVA4tQLaeIK/Tn7c5sNfr+7Jet1ubrcvP7KS9bhJ3DJLzE9881i1fK
        VjSlgppPkW+obC9rHW3FYir3VT2P4J1Cn4pqhnFD82XKlF0rOnaxVqo6teNq
        tV4vlkpZOSiQ01ILQvn2cz14yHojVa4Jon98taiwG1tirR7crnqllzj0Veq3
        qdr3e7u5N9T/gfld4g/J+0t6W95l/eOkf5xz3fhqYgeP+o5kuQyXRssd05xh
        +d8DPwXh7RSw7RWu/t6e6NRzK9VSTqDL4d4UqKRUzkPgNCWQby/xCLi/rpk+
        PnXDci+5/wH7/Epzsw0AAA==
    http_version: 
  recorded_at: Sun, 07 Feb 2016 01:10:24 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/worksheets/1_WVfnRMINBfH6NSUZ6XQh2QCoR7Eu1P_3tlLS8_PlLQ/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.6 Mac OS X/10.11.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.gQJ66VjWknx1BaV3wx-fW7ZX9kYuODN6LXP4l-8Rx2mTk0ef2gvlUpbYW_Z1SgX-NrBTaw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      X-Robots-Tag:
      - noindex, nofollow, nosnippet
      Expires:
      - Sun, 07 Feb 2016 01:10:24 GMT
      Date:
      - Sun, 07 Feb 2016 01:10:24 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"C0cHSX04cSt7ImA9XRNXF04."
      Last-Modified:
      - Sat, 06 Feb 2016 03:57:18 GMT
      Content-Encoding:
      - gzip
      P3p:
      - CP="This is not a P3P policy! See https://support.google.com/accounts/answer/151657?hl=en
        for more info."
      - CP="This is not a P3P policy! See https://support.google.com/accounts/answer/151657?hl=en
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Set-Cookie:
      - NID=76=nAdEhdE2L1sV-1p_XjcOSrFdNL-6aje6_LXcv9ONdpTpqIpTVRKyWP1xkUHj1DtsUBBDQFI3ohB0Toeu34MYp0qlgWo5lwLZqzsGDZKlDWv9MNWLUrI9xeZ6h7p2YFa1;Domain=.google.com;Path=/;Expires=Mon,
        08-Aug-2016 01:10:24 GMT;HttpOnly
      - NID=76=yvyVVPBewq0tJSTC-eSKgCGZwI67NrVCGAGLgDukOrHUfCiioNqf-QoDj_l2i7mtczRHX3PK3r-spQ0VOLv7_sYTh6O12GGFdl7ByRunE50jI2sevtUTbhoMQIOjYypV;Domain=.google.com;Path=/;Expires=Mon,
        08-Aug-2016 01:10:24 GMT;HttpOnly
      Alternate-Protocol:
      - 443:quic,p=1
      Alt-Svc:
      - quic=":443"; ma=604800; v="30,29,28,27,26,25"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAMxWW0/bMBT+K5WQyMPUOGmhLcENK2iIIoag5VLxgizHSSyc
        2NhOU/j1s5P1wibYigbrU+Rz/Y7P8XcCD2YZa0yJVJTnfcd3PadBcswjmid9
        5/rquNlzDkIYExI1jGWu+k6qtQgAKMvSLdsulwloed4uGGieObVNwAXJxwRJ
        nC7M0Z6LeQaaQAmCgTVQlQHwXR/M/ZJleIVTkiHlJpwnjFS+SkiCIpUSopXN
        2Vm4RW+51ficRhIFRCNT1S3Yfiy43j/y8Ml44u3gse4Os8HeZHQ+OfZ23Frr
        hJBGoQ2rbNyV3KvB7cUoUHL58BOXf397E+ej78Pzw/ikcz6+vutMLtPW5REf
        db8V/sV9W7Ozce/+gp1dAiHpFGkC4oIxCEw6WIjICKKw5fmdptdqep0rrx3s
        dgO/57bbe3cQzC0gNp+Ey6dGVTNZ8+Y0kdlaLluLIh0QQk01IyHPMbLI6xNk
        NH9oSML6DmImfm4AmkRPwmBDQjBqEJspA8hMyhfTOaeRShLXIOwdRxy/DiFa
        72ZJRCucS0h/GpAt28p14H78SKxZgOBKb3IBirB48/ChQqdchjBHGQlRxpkw
        qJiLBASVCJrbpuyF5mtiRRYLBLUWgnmYJfUFmmvERkQVTKvQh+A11aqP0kjq
        YR6R2S8eKwpIcm2e/YLPar4ajsqbweHd6c1TxWafyGI86qxNXqb/gX2j87US
        GMErq6ULjM55I+gy1kaQ4tge/QUpYp5r07A35n6/UtX0oyT+2wfAqNJrN+pd
        /PJ72Zgwpv4tYVYhP6eeKVUFYvS5hmsK6m29EA0E/V97K5nSZ6AfDxIa9b33
        94fMBJcaq+m8Dk1mGlTnD9y5VdIa+jbKxH7MZYZ036bd8EVgR+klxuoHYiMx
        JirAnB3xItdhyzDv6tkqJS/rg+95XqVeSMy6sqvDfC2s8AcAAAD//wMA6j2G
        6f0LAAA=
    http_version: 
  recorded_at: Sun, 07 Feb 2016 01:10:25 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/cells/1_WVfnRMINBfH6NSUZ6XQh2QCoR7Eu1P_3tlLS8_PlLQ/od6/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.6 Mac OS X/10.11.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.gQJ66VjWknx1BaV3wx-fW7ZX9kYuODN6LXP4l-8Rx2mTk0ef2gvlUpbYW_Z1SgX-NrBTaw
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      X-Robots-Tag:
      - noindex, nofollow, nosnippet
      Expires:
      - Sun, 07 Feb 2016 01:10:25 GMT
      Date:
      - Sun, 07 Feb 2016 01:10:25 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"C0cHSX04cSt7ImA9XRNXF04."
      Last-Modified:
      - Sat, 06 Feb 2016 03:57:18 GMT
      Content-Encoding:
      - gzip
      P3p:
      - CP="This is not a P3P policy! See https://support.google.com/accounts/answer/151657?hl=en
        for more info."
      - CP="This is not a P3P policy! See https://support.google.com/accounts/answer/151657?hl=en
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Set-Cookie:
      - NID=76=0yMEgPCKVuvMM9J5nOufwfSvoD8kIu04L2WtClMSny8JPtNZgPQfNEnjVMuq1OHSoD8NOFFLPTt4KhFOtk131zWst2RtK8RVIj6DfDG9NvY_TSduaQXugqoeCrlpQJRC;Domain=.google.com;Path=/;Expires=Mon,
        08-Aug-2016 01:10:25 GMT;HttpOnly
      - NID=76=KVzWUnTTIRhxxuBLXebDN-y5lDR5B5Ct2m1KJxDxGLCCplMMcMQDph8XNdq-Cb2gyj9cgRXIS6SzSX9mpAIxQUUlu7IqbBmPIpmyvADJ-ZBNSNI_2uQKSmI0adndkaRE;Domain=.google.com;Path=/;Expires=Mon,
        08-Aug-2016 01:10:25 GMT;HttpOnly
      Alternate-Protocol:
      - 443:quic,p=1
      Alt-Svc:
      - quic=":443"; ma=604800; v="30,29,28,27,26,25"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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
        AAD//wMAPK908QJwAwA=
    http_version: 
  recorded_at: Sun, 07 Feb 2016 01:10:25 GMT
- request:
    method: post
    uri: https://accounts.google.com/o/oauth2/token
    body:
      encoding: ASCII-8BIT
      string: grant_type=refresh_token&refresh_token=1%2FOURVEEm7FgxSaw171vZ9jVRqS4_IduuzvMvliSiipOY&client_id=250036828738-opqofrhq8b3mpujo9hqdl6c0hq1jd0ob.apps.googleusercontent.com&client_secret=FYDobsdquZscjX3-0oCeAnZ7
    headers:
      User-Agent:
      - Faraday v0.9.2
      Content-Type:
      - application/x-www-form-urlencoded
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=utf-8
      X-Content-Type-Options:
      - nosniff
      Cache-Control:
      - no-cache, no-store, max-age=0, must-revalidate
      Pragma:
      - no-cache
      Expires:
      - Fri, 01 Jan 1990 00:00:00 GMT
      Date:
      - Sun, 07 Feb 2016 05:12:53 GMT
      Content-Disposition:
      - attachment; filename="json.txt"; filename*=UTF-8''json.txt
      P3p:
      - CP="This is not a P3P policy! See https://support.google.com/accounts/answer/151657?hl=en
        for more info."
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Set-Cookie:
      - NID=76=nSLDB8wDSLYwciJZvFdzCKU5lxnZRWMemQy37CZtc4-lHHsJ7PpJi3lWPlaIMMGzWn4PQVzVEhTozQp2297l7i1tTDuBLuXtdWdmTHkrUn0dOkVUTacef34p7WspzgfG;Domain=.google.com;Path=/;Expires=Mon,
        08-Aug-2016 05:12:53 GMT;HttpOnly
      Alternate-Protocol:
      - 443:quic,p=1
      Alt-Svc:
      - quic=":443"; ma=604800; v="30,29,28,27,26,25"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: |-
        {
          "access_token" : "ya29.gQJKT9w4FZkxWxDW21Id6ewpbXRmAgH1Y1u4D5K-_aqLnjB0UH2OEkSPTRZtIrcq0a3X",
          "token_type" : "Bearer",
          "expires_in" : 3600
        }
    http_version: 
  recorded_at: Sun, 07 Feb 2016 17:00:00 GMT
- request:
    method: get
    uri: https://www.googleapis.com/discovery/v1/apis/drive/v2/rest
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.6 Mac OS X/10.11.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Sun, 07 Feb 2016 05:17:01 GMT
      Date:
      - Sun, 07 Feb 2016 05:12:01 GMT
      Etag:
      - '"bRFOOrZKfO9LweMbPqu0kcu6De8/g01Z3thhzMzuE_YQJeQk4iZ3-bs"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '130926'
      Server:
      - GSE
      Age:
      - '52'
      Cache-Control:
      - public, max-age=300, must-revalidate, no-transform
      Alternate-Protocol:
      - 443:quic,p=1
      Alt-Svc:
      - quic=":443"; ma=604800; v="30,29,28,27,26,25"
    body:
      encoding: UTF-8
      string: |
        {
         "kind": "discovery#restDescription",
         "etag": "\"bRFOOrZKfO9LweMbPqu0kcu6De8/g01Z3thhzMzuE_YQJeQk4iZ3-bs\"",
         "discoveryVersion": "v1",
         "id": "drive:v2",
         "name": "drive",
         "version": "v2",
         "revision": "20160128",
         "title": "Drive API",
         "description": "The API to interact with Drive.",
         "ownerDomain": "google.com",
         "ownerName": "Google",
         "icons": {
          "x16": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_16.png",
          "x32": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_32.png"
         },
         "documentationLink": "https://developers.google.com/drive/",
         "protocol": "rest",
         "baseUrl": "https://www.googleapis.com/drive/v2/",
         "basePath": "/drive/v2/",
         "rootUrl": "https://www.googleapis.com/",
         "servicePath": "drive/v2/",
         "batchPath": "batch",
         "parameters": {
          "alt": {
           "type": "string",
           "description": "Data format for the response.",
           "default": "json",
           "enum": [
            "json"
           ],
           "enumDescriptions": [
            "Responses with Content-Type of application/json"
           ],
           "location": "query"
          },
          "fields": {
           "type": "string",
           "description": "Selector specifying which fields to include in a partial response.",
           "location": "query"
          },
          "key": {
           "type": "string",
           "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
           "location": "query"
          },
          "oauth_token": {
           "type": "string",
           "description": "OAuth 2.0 token for the current user.",
           "location": "query"
          },
          "prettyPrint": {
           "type": "boolean",
           "description": "Returns response with indentations and line breaks.",
           "default": "true",
           "location": "query"
          },
          "quotaUser": {
           "type": "string",
           "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
           "location": "query"
          },
          "userIp": {
           "type": "string",
           "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
           "location": "query"
          }
         },
         "auth": {
          "oauth2": {
           "scopes": {
            "https://www.googleapis.com/auth/drive": {
             "description": "View and manage the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.appdata": {
             "description": "View and manage its own configuration data in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.apps.readonly": {
             "description": "View your Google Drive apps"
            },
            "https://www.googleapis.com/auth/drive.file": {
             "description": "View and manage Google Drive files and folders that you have opened or created with this app"
            },
            "https://www.googleapis.com/auth/drive.metadata": {
             "description": "View and manage metadata of files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.metadata.readonly": {
             "description": "View metadata for files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.photos.readonly": {
             "description": "View the photos, videos and albums in your Google Photos"
            },
            "https://www.googleapis.com/auth/drive.readonly": {
             "description": "View the files in your Google Drive"
            },
            "https://www.googleapis.com/auth/drive.scripts": {
             "description": "Modify your Google Apps Script scripts' behavior"
            }
           }
          }
         },
         "schemas": {
          "About": {
           "id": "About",
           "type": "object",
           "description": "An item with user information and settings.",
           "properties": {
            "additionalRoleInfo": {
             "type": "array",
             "description": "Information about supported additional roles per file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "roleSets": {
                "type": "array",
                "description": "The supported additional roles per primary role.",
                "items": {
                 "type": "object",
                 "properties": {
                  "additionalRoles": {
                   "type": "array",
                   "description": "The supported additional roles with the primary role.",
                   "items": {
                    "type": "string"
                   }
                  },
                  "primaryRole": {
                   "type": "string",
                   "description": "A primary permission role."
                  }
                 }
                }
               },
               "type": {
                "type": "string",
                "description": "The content type that this additional role info applies to."
               }
              }
             }
            },
            "domainSharingPolicy": {
             "type": "string",
             "description": "The domain sharing policy for the current user. Possible values are:  \n- allowed \n- allowedWithWarning \n- incomingOnly \n- disallowed"
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the item."
            },
            "exportFormats": {
             "type": "array",
             "description": "The allowable export formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "features": {
             "type": "array",
             "description": "List of additional features enabled on this account.",
             "items": {
              "type": "object",
              "properties": {
               "featureName": {
                "type": "string",
                "description": "The name of the feature."
               },
               "featureRate": {
                "type": "number",
                "description": "The request limit rate for this feature, in queries per second.",
                "format": "double"
               }
              }
             }
            },
            "folderColorPalette": {
             "type": "array",
             "description": "The palette of allowable folder colors as RGB hex strings.",
             "items": {
              "type": "string"
             }
            },
            "importFormats": {
             "type": "array",
             "description": "The allowable import formats.",
             "items": {
              "type": "object",
              "properties": {
               "source": {
                "type": "string",
                "description": "The imported file's content type to convert from."
               },
               "targets": {
                "type": "array",
                "description": "The possible content types to convert to.",
                "items": {
                 "type": "string"
                }
               }
              }
             }
            },
            "isCurrentAppInstalled": {
             "type": "boolean",
             "description": "A boolean indicating whether the authenticated app is installed by the authenticated user."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#about.",
             "default": "drive#about"
            },
            "languageCode": {
             "type": "string",
             "description": "The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/)."
            },
            "largestChangeId": {
             "type": "string",
             "description": "The largest change id.",
             "format": "int64"
            },
            "maxUploadSizes": {
             "type": "array",
             "description": "List of max upload sizes for each file type. The most specific type takes precedence.",
             "items": {
              "type": "object",
              "properties": {
               "size": {
                "type": "string",
                "description": "The max upload size for this type.",
                "format": "int64"
               },
               "type": {
                "type": "string",
                "description": "The file type."
               }
              }
             }
            },
            "name": {
             "type": "string",
             "description": "The name of the current user."
            },
            "permissionId": {
             "type": "string",
             "description": "The current user's ID as visible in the permissions collection."
            },
            "quotaBytesByService": {
             "type": "array",
             "description": "The amount of storage quota used by different Google services.",
             "items": {
              "type": "object",
              "properties": {
               "bytesUsed": {
                "type": "string",
                "description": "The storage quota bytes used by the service.",
                "format": "int64"
               },
               "serviceName": {
                "type": "string",
                "description": "The service's name, e.g. DRIVE, GMAIL, or PHOTOS."
               }
              }
             }
            },
            "quotaBytesTotal": {
             "type": "string",
             "description": "The total number of quota bytes.",
             "format": "int64"
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by Google Drive.",
             "format": "int64"
            },
            "quotaBytesUsedAggregate": {
             "type": "string",
             "description": "The number of quota bytes used by all Google apps (Drive, Picasa, etc.).",
             "format": "int64"
            },
            "quotaBytesUsedInTrash": {
             "type": "string",
             "description": "The number of quota bytes used by trashed items.",
             "format": "int64"
            },
            "quotaType": {
             "type": "string",
             "description": "The type of the user's storage quota. Possible values are:  \n- LIMITED \n- UNLIMITED"
            },
            "remainingChangeIds": {
             "type": "string",
             "description": "The number of remaining change ids.",
             "format": "int64"
            },
            "rootFolderId": {
             "type": "string",
             "description": "The id of the root folder."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this item."
            },
            "user": {
             "$ref": "User",
             "description": "The authenticated user."
            }
           }
          },
          "App": {
           "id": "App",
           "type": "object",
           "description": "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.",
           "properties": {
            "authorized": {
             "type": "boolean",
             "description": "Whether the app is authorized to access data on the user's Drive."
            },
            "createInFolderTemplate": {
             "type": "string",
             "description": "The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in."
            },
            "createUrl": {
             "type": "string",
             "description": "The url to create a new file with this app."
            },
            "hasDriveWideScope": {
             "type": "boolean",
             "description": "Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive."
            },
            "icons": {
             "type": "array",
             "description": "The various icons for the app.",
             "items": {
              "type": "object",
              "properties": {
               "category": {
                "type": "string",
                "description": "Category of the icon. Allowed values are:  \n- application - icon for the application \n- document - icon for a file associated with the app \n- documentShared - icon for a shared file associated with the app"
               },
               "iconUrl": {
                "type": "string",
                "description": "URL for the icon."
               },
               "size": {
                "type": "integer",
                "description": "Size of the icon. Represented as the maximum of the width and height.",
                "format": "int32"
               }
              }
             }
            },
            "id": {
             "type": "string",
             "description": "The ID of the app."
            },
            "installed": {
             "type": "boolean",
             "description": "Whether the app is installed."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#app.",
             "default": "drive#app"
            },
            "longDescription": {
             "type": "string",
             "description": "A long description of the app."
            },
            "name": {
             "type": "string",
             "description": "The name of the app."
            },
            "objectType": {
             "type": "string",
             "description": "The type of object this app creates (e.g. Chart). If empty, the app name should be used instead."
            },
            "openUrlTemplate": {
             "type": "string",
             "description": "The template url for opening files with this app. The template will contain {ids} and/or {exportIds} to be replaced by the actual file ids. See  Open Files  for the full documentation."
            },
            "primaryFileExtensions": {
             "type": "array",
             "description": "The list of primary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "primaryMimeTypes": {
             "type": "array",
             "description": "The list of primary mime types.",
             "items": {
              "type": "string"
             }
            },
            "productId": {
             "type": "string",
             "description": "The ID of the product listing for this app."
            },
            "productUrl": {
             "type": "string",
             "description": "A link to the product listing for this app."
            },
            "secondaryFileExtensions": {
             "type": "array",
             "description": "The list of secondary file extensions.",
             "items": {
              "type": "string"
             }
            },
            "secondaryMimeTypes": {
             "type": "array",
             "description": "The list of secondary mime types.",
             "items": {
              "type": "string"
             }
            },
            "shortDescription": {
             "type": "string",
             "description": "A short description of the app."
            },
            "supportsCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new objects."
            },
            "supportsImport": {
             "type": "boolean",
             "description": "Whether this app supports importing Google Docs."
            },
            "supportsMultiOpen": {
             "type": "boolean",
             "description": "Whether this app supports opening more than one file."
            },
            "supportsOfflineCreate": {
             "type": "boolean",
             "description": "Whether this app supports creating new files when offline."
            },
            "useByDefault": {
             "type": "boolean",
             "description": "Whether the app is selected as the default handler for the types it supports."
            }
           }
          },
          "AppList": {
           "id": "AppList",
           "type": "object",
           "description": "A list of third-party applications which the user has installed or given access to Google Drive.",
           "properties": {
            "defaultAppIds": {
             "type": "array",
             "description": "List of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest).",
             "items": {
              "type": "string"
             }
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of apps.",
             "items": {
              "$ref": "App"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#appList.",
             "default": "drive#appList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Change": {
           "id": "Change",
           "type": "object",
           "description": "Representation of a change to a file.",
           "properties": {
            "deleted": {
             "type": "boolean",
             "description": "Whether the file has been deleted."
            },
            "file": {
             "$ref": "File",
             "description": "The updated state of the file. Present if the file has not been deleted."
            },
            "fileId": {
             "type": "string",
             "description": "The ID of the file associated with this change."
            },
            "id": {
             "type": "string",
             "description": "The ID of the change.",
             "format": "int64"
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#change.",
             "default": "drive#change"
            },
            "modificationDate": {
             "type": "string",
             "description": "The time of this modification.",
             "format": "date-time"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this change."
            }
           }
          },
          "ChangeList": {
           "id": "ChangeList",
           "type": "object",
           "description": "A list of changes for a user.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of changes.",
             "items": {
              "$ref": "Change"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#changeList.",
             "default": "drive#changeList"
            },
            "largestChangeId": {
             "type": "string",
             "description": "The current largest change ID.",
             "format": "int64"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of changes."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of changes."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Channel": {
           "id": "Channel",
           "type": "object",
           "description": "An notification channel used to watch for resource changes.",
           "properties": {
            "address": {
             "type": "string",
             "description": "The address where notifications are delivered for this channel."
            },
            "expiration": {
             "type": "string",
             "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "A UUID or similar unique string that identifies this channel."
            },
            "kind": {
             "type": "string",
             "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
             "default": "api#channel"
            },
            "params": {
             "type": "object",
             "description": "Additional parameters controlling delivery channel behavior. Optional.",
             "additionalProperties": {
              "type": "string",
              "description": "Declares a new parameter by name."
             }
            },
            "payload": {
             "type": "boolean",
             "description": "A Boolean value to indicate whether payload is wanted. Optional."
            },
            "resourceId": {
             "type": "string",
             "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
            },
            "resourceUri": {
             "type": "string",
             "description": "A version-specific identifier for the watched resource."
            },
            "token": {
             "type": "string",
             "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
            },
            "type": {
             "type": "string",
             "description": "The type of delivery mechanism used for this channel."
            }
           }
          },
          "ChildList": {
           "id": "ChildList",
           "type": "object",
           "description": "A list of children of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of children.",
             "items": {
              "$ref": "ChildReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childList.",
             "default": "drive#childList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of children."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of children."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ChildReference": {
           "id": "ChildReference",
           "type": "object",
           "description": "A reference to a folder's child.",
           "properties": {
            "childLink": {
             "type": "string",
             "description": "A link to the child."
            },
            "id": {
             "type": "string",
             "description": "The ID of the child.",
             "annotations": {
              "required": [
               "drive.children.insert"
              ]
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#childReference.",
             "default": "drive#childReference"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Comment": {
           "id": "Comment",
           "type": "object",
           "description": "A comment on a file in Google Drive.",
           "properties": {
            "anchor": {
             "type": "string",
             "description": "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties."
            },
            "author": {
             "$ref": "User",
             "description": "The user who wrote this comment."
            },
            "commentId": {
             "type": "string",
             "description": "The ID of the comment."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content.",
             "annotations": {
              "required": [
               "drive.comments.insert",
               "drive.comments.update"
              ]
             }
            },
            "context": {
             "type": "object",
             "description": "The context of the file which is being commented on.",
             "properties": {
              "type": {
               "type": "string",
               "description": "The MIME type of the context snippet."
              },
              "value": {
               "type": "string",
               "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about."
              }
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this comment was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
            },
            "fileId": {
             "type": "string",
             "description": "The file which this comment is addressing."
            },
            "fileTitle": {
             "type": "string",
             "description": "The title of the file which this comment is addressing."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this comment."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#comment.",
             "default": "drive#comment"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this comment or any of its replies were last modified.",
             "format": "date-time"
            },
            "replies": {
             "type": "array",
             "description": "Replies to this post.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this comment."
            },
            "status": {
             "type": "string",
             "description": "The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- \"open\" - The comment is still open. \n- \"resolved\" - The comment has been resolved by one of its replies."
            }
           }
          },
          "CommentList": {
           "id": "CommentList",
           "type": "object",
           "description": "A list of comments on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of comments.",
             "items": {
              "$ref": "Comment"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentList.",
             "default": "drive#commentList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of comments."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "CommentReply": {
           "id": "CommentReply",
           "type": "object",
           "description": "A comment on a file in Google Drive.",
           "properties": {
            "author": {
             "$ref": "User",
             "description": "The user who wrote this reply."
            },
            "content": {
             "type": "string",
             "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen).",
             "annotations": {
              "required": [
               "drive.replies.update"
              ]
             }
            },
            "createdDate": {
             "type": "string",
             "description": "The date when this reply was first created.",
             "format": "date-time"
            },
            "deleted": {
             "type": "boolean",
             "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
            },
            "htmlContent": {
             "type": "string",
             "description": "HTML formatted content for this reply."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReply.",
             "default": "drive#commentReply"
            },
            "modifiedDate": {
             "type": "string",
             "description": "The date when this reply was last modified.",
             "format": "date-time"
            },
            "replyId": {
             "type": "string",
             "description": "The ID of the reply."
            },
            "verb": {
             "type": "string",
             "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
            }
           }
          },
          "CommentReplyList": {
           "id": "CommentReplyList",
           "type": "object",
           "description": "A list of replies to a comment on a file in Google Drive.",
           "properties": {
            "items": {
             "type": "array",
             "description": "List of reply.",
             "items": {
              "$ref": "CommentReply"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#commentReplyList.",
             "default": "drive#commentReplyList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of replies."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The token to use to request the next page of results."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "File": {
           "id": "File",
           "type": "object",
           "description": "The metadata for a file.",
           "properties": {
            "alternateLink": {
             "type": "string",
             "description": "A link for opening the file in a relevant Google editor or viewer."
            },
            "appDataContents": {
             "type": "boolean",
             "description": "Whether this file is in the Application Data folder."
            },
            "canComment": {
             "type": "boolean",
             "description": "Whether the current user can comment on the file."
            },
            "copyable": {
             "type": "boolean",
             "description": "Whether the file can be copied by the current user."
            },
            "createdDate": {
             "type": "string",
             "description": "Create time for this file (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "defaultOpenWithLink": {
             "type": "string",
             "description": "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used."
            },
            "description": {
             "type": "string",
             "description": "A short description of the file."
            },
            "downloadUrl": {
             "type": "string"
            },
            "editable": {
             "type": "boolean",
             "description": "Whether the file can be edited by the current user."
            },
            "embedLink": {
             "type": "string",
             "description": "A link for embedding the file."
            },
            "etag": {
             "type": "string",
             "description": "ETag of the file."
            },
            "explicitlyTrashed": {
             "type": "boolean",
             "description": "Whether this file has been explicitly trashed, as opposed to recursively trashed."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileExtension": {
             "type": "string",
             "description": "The final component of fullFileExtension with trailing text that does not appear to be part of the extension removed. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files."
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the file in bytes. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files.",
             "format": "int64"
            },
            "folderColorRgb": {
             "type": "string",
             "description": "Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette."
            },
            "fullFileExtension": {
             "type": "string",
             "description": "The full file extension; extracted from the title. May contain multiple concatenated extensions, such as \"tar.gz\". Removing an extension from the title does not clear this field; however, changing the extension on the title does update this field. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files."
            },
            "headRevisionId": {
             "type": "string",
             "description": "The ID of the file's head revision. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files."
            },
            "iconLink": {
             "type": "string",
             "description": "A link to the file's icon."
            },
            "id": {
             "type": "string",
             "description": "The ID of the file."
            },
            "imageMediaMetadata": {
             "type": "object",
             "description": "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
             "properties": {
              "aperture": {
               "type": "number",
               "description": "The aperture used to create the photo (f-number).",
               "format": "float"
              },
              "cameraMake": {
               "type": "string",
               "description": "The make of the camera used to create the photo."
              },
              "cameraModel": {
               "type": "string",
               "description": "The model of the camera used to create the photo."
              },
              "colorSpace": {
               "type": "string",
               "description": "The color space of the photo."
              },
              "date": {
               "type": "string",
               "description": "The date and time the photo was taken (EXIF format timestamp)."
              },
              "exposureBias": {
               "type": "number",
               "description": "The exposure bias of the photo (APEX value).",
               "format": "float"
              },
              "exposureMode": {
               "type": "string",
               "description": "The exposure mode used to create the photo."
              },
              "exposureTime": {
               "type": "number",
               "description": "The length of the exposure, in seconds.",
               "format": "float"
              },
              "flashUsed": {
               "type": "boolean",
               "description": "Whether a flash was used to create the photo."
              },
              "focalLength": {
               "type": "number",
               "description": "The focal length used to create the photo, in millimeters.",
               "format": "float"
              },
              "height": {
               "type": "integer",
               "description": "The height of the image in pixels.",
               "format": "int32"
              },
              "isoSpeed": {
               "type": "integer",
               "description": "The ISO speed used to create the photo.",
               "format": "int32"
              },
              "lens": {
               "type": "string",
               "description": "The lens used to create the photo."
              },
              "location": {
               "type": "object",
               "description": "Geographic location information stored in the image.",
               "properties": {
                "altitude": {
                 "type": "number",
                 "description": "The altitude stored in the image.",
                 "format": "double"
                },
                "latitude": {
                 "type": "number",
                 "description": "The latitude stored in the image.",
                 "format": "double"
                },
                "longitude": {
                 "type": "number",
                 "description": "The longitude stored in the image.",
                 "format": "double"
                }
               }
              },
              "maxApertureValue": {
               "type": "number",
               "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
               "format": "float"
              },
              "meteringMode": {
               "type": "string",
               "description": "The metering mode used to create the photo."
              },
              "rotation": {
               "type": "integer",
               "description": "The rotation in clockwise degrees from the image's original orientation.",
               "format": "int32"
              },
              "sensor": {
               "type": "string",
               "description": "The type of sensor used to create the photo."
              },
              "subjectDistance": {
               "type": "integer",
               "description": "The distance to the subject of the photo, in meters.",
               "format": "int32"
              },
              "whiteBalance": {
               "type": "string",
               "description": "The white balance mode used to create the photo."
              },
              "width": {
               "type": "integer",
               "description": "The width of the image in pixels.",
               "format": "int32"
              }
             }
            },
            "indexableText": {
             "type": "object",
             "description": "Indexable text attributes for the file (can only be written)",
             "properties": {
              "text": {
               "type": "string",
               "description": "The text to be indexed for this file."
              }
             }
            },
            "kind": {
             "type": "string",
             "description": "The type of file. This is always drive#file.",
             "default": "drive#file"
            },
            "labels": {
             "type": "object",
             "description": "A group of labels for the file.",
             "properties": {
              "hidden": {
               "type": "boolean",
               "description": "Deprecated."
              },
              "restricted": {
               "type": "boolean",
               "description": "Whether viewers and commenters are prevented from downloading, printing, and copying this file."
              },
              "starred": {
               "type": "boolean",
               "description": "Whether this file is starred by the user."
              },
              "trashed": {
               "type": "boolean",
               "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files."
              },
              "viewed": {
               "type": "boolean",
               "description": "Whether this file has been viewed by this user."
              }
             }
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this file."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this file."
            },
            "lastViewedByMeDate": {
             "type": "string",
             "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "markedViewedByMeDate": {
             "type": "string",
             "description": "Deprecated.",
             "format": "date-time"
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this file. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
            },
            "modifiedByMeDate": {
             "type": "string",
             "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
             "format": "date-time"
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
             "format": "date-time"
            },
            "openWithLinks": {
             "type": "object",
             "description": "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.",
             "additionalProperties": {
              "type": "string"
             }
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename if the file was uploaded manually, or the original title if the file was inserted through the API. Note that renames of the title will not change the original filename. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files."
            },
            "ownedByMe": {
             "type": "boolean",
             "description": "Whether the file is owned by the current user."
            },
            "ownerNames": {
             "type": "array",
             "description": "Name(s) of the owner(s) of this file.",
             "items": {
              "type": "string"
             }
            },
            "owners": {
             "type": "array",
             "description": "The owner(s) of this file.",
             "items": {
              "$ref": "User"
             }
            },
            "parents": {
             "type": "array",
             "description": "Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "permissions": {
             "type": "array",
             "description": "The list of permissions for users with access to this file.",
             "items": {
              "$ref": "Permission"
             }
            },
            "properties": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "quotaBytesUsed": {
             "type": "string",
             "description": "The number of quota bytes used by this file.",
             "format": "int64"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this file."
            },
            "shareable": {
             "type": "boolean",
             "description": "Whether the file's sharing settings can be modified by the current user."
            },
            "shared": {
             "type": "boolean",
             "description": "Whether the file has been shared."
            },
            "sharedWithMeDate": {
             "type": "string",
             "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "sharingUser": {
             "$ref": "User",
             "description": "User that shared the item with the current user, if available."
            },
            "spaces": {
             "type": "array",
             "description": "The list of spaces which contain the file. Supported values are 'drive', 'appDataFolder' and 'photos'.",
             "items": {
              "type": "string"
             }
            },
            "thumbnail": {
             "type": "object",
             "description": "Thumbnail for the file. Only accepted on upload and for files that are not already thumbnailed by Google.",
             "properties": {
              "image": {
               "type": "string",
               "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
               "format": "byte"
              },
              "mimeType": {
               "type": "string",
               "description": "The MIME type of the thumbnail."
              }
             }
            },
            "thumbnailLink": {
             "type": "string",
             "description": "A short-lived link to the file's thumbnail. Typically lasts on the order of hours."
            },
            "title": {
             "type": "string",
             "description": "The title of this file."
            },
            "userPermission": {
             "$ref": "Permission",
             "description": "The permissions for the authenticated user on this file."
            },
            "version": {
             "type": "string",
             "description": "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
             "format": "int64"
            },
            "videoMediaMetadata": {
             "type": "object",
             "description": "Metadata about video media. This will only be present for video types.",
             "properties": {
              "durationMillis": {
               "type": "string",
               "description": "The duration of the video in milliseconds.",
               "format": "int64"
              },
              "height": {
               "type": "integer",
               "description": "The height of the video in pixels.",
               "format": "int32"
              },
              "width": {
               "type": "integer",
               "description": "The width of the video in pixels.",
               "format": "int32"
              }
             }
            },
            "webContentLink": {
             "type": "string",
             "description": "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
            },
            "webViewLink": {
             "type": "string",
             "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."
            },
            "writersCanShare": {
             "type": "boolean",
             "description": "Whether writers can share the document with other users."
            }
           }
          },
          "FileList": {
           "id": "FileList",
           "type": "object",
           "description": "A list of files.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of files.",
             "items": {
              "$ref": "File"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#fileList.",
             "default": "drive#fileList"
            },
            "nextLink": {
             "type": "string",
             "description": "A link to the next page of files."
            },
            "nextPageToken": {
             "type": "string",
             "description": "The page token for the next page of files."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "GeneratedIds": {
           "id": "GeneratedIds",
           "type": "object",
           "description": "A list of generated IDs which can be provided in insert requests",
           "properties": {
            "ids": {
             "type": "array",
             "description": "The IDs generated for the requesting user in the specified space.",
             "items": {
              "type": "string"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#generatedIds",
             "default": "drive#generatedIds"
            },
            "space": {
             "type": "string",
             "description": "The type of file that can be created with these IDs."
            }
           }
          },
          "ParentList": {
           "id": "ParentList",
           "type": "object",
           "description": "A list of a file's parents.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of parents.",
             "items": {
              "$ref": "ParentReference"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentList.",
             "default": "drive#parentList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "ParentReference": {
           "id": "ParentReference",
           "type": "object",
           "description": "A reference to a file's parent.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The ID of the parent.",
             "annotations": {
              "required": [
               "drive.parents.insert"
              ]
             }
            },
            "isRoot": {
             "type": "boolean",
             "description": "Whether or not the parent is the root folder."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#parentReference.",
             "default": "drive#parentReference"
            },
            "parentLink": {
             "type": "string",
             "description": "A link to the parent."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this reference."
            }
           }
          },
          "Permission": {
           "id": "Permission",
           "type": "object",
           "description": "A permission for a file.",
           "properties": {
            "additionalRoles": {
             "type": "array",
             "description": "Additional roles for this user. Only commenter is currently allowed.",
             "items": {
              "type": "string"
             }
            },
            "authKey": {
             "type": "string",
             "description": "The authkey parameter required for this permission."
            },
            "domain": {
             "type": "string",
             "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the permission."
            },
            "id": {
             "type": "string",
             "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permission.",
             "default": "drive#permission"
            },
            "name": {
             "type": "string",
             "description": "The name for this permission."
            },
            "photoLink": {
             "type": "string",
             "description": "A link to the profile photo, if available."
            },
            "role": {
             "type": "string",
             "description": "The primary role for this user. Allowed values are:  \n- owner \n- reader \n- writer",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this permission."
            },
            "type": {
             "type": "string",
             "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone",
             "annotations": {
              "required": [
               "drive.permissions.insert"
              ]
             }
            },
            "value": {
             "type": "string",
             "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified."
            },
            "withLink": {
             "type": "boolean",
             "description": "Whether the link is required for this permission."
            }
           }
          },
          "PermissionId": {
           "id": "PermissionId",
           "type": "object",
           "description": "An ID for a user or group as seen in Permission items.",
           "properties": {
            "id": {
             "type": "string",
             "description": "The permission ID."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionId.",
             "default": "drive#permissionId"
            }
           }
          },
          "PermissionList": {
           "id": "PermissionList",
           "type": "object",
           "description": "A list of permissions associated with a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of permissions.",
             "items": {
              "$ref": "Permission"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#permissionList.",
             "default": "drive#permissionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "Property": {
           "id": "Property",
           "type": "object",
           "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "ETag of the property."
            },
            "key": {
             "type": "string",
             "description": "The key of this property."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#property.",
             "default": "drive#property"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this property."
            },
            "value": {
             "type": "string",
             "description": "The value of this property."
            },
            "visibility": {
             "type": "string",
             "description": "The visibility of this property."
            }
           }
          },
          "PropertyList": {
           "id": "PropertyList",
           "type": "object",
           "description": "A collection of properties, key-value pairs that are either public or private to an application.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The list of properties.",
             "items": {
              "$ref": "Property"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#propertyList.",
             "default": "drive#propertyList"
            },
            "selfLink": {
             "type": "string",
             "description": "The link back to this list."
            }
           }
          },
          "Revision": {
           "id": "Revision",
           "type": "object",
           "description": "A revision of a file.",
           "properties": {
            "downloadUrl": {
             "type": "string",
             "description": "Short term download URL for the file. This will only be populated on files with content stored in Drive."
            },
            "etag": {
             "type": "string",
             "description": "The ETag of the revision."
            },
            "exportLinks": {
             "type": "object",
             "description": "Links for exporting Google Docs to specific formats.",
             "additionalProperties": {
              "type": "string",
              "description": "A mapping from export format to URL"
             }
            },
            "fileSize": {
             "type": "string",
             "description": "The size of the revision in bytes. This will only be populated on files with content stored in Drive.",
             "format": "int64"
            },
            "id": {
             "type": "string",
             "description": "The ID of the revision."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revision.",
             "default": "drive#revision"
            },
            "lastModifyingUser": {
             "$ref": "User",
             "description": "The last user to modify this revision."
            },
            "lastModifyingUserName": {
             "type": "string",
             "description": "Name of the last user to modify this revision."
            },
            "md5Checksum": {
             "type": "string",
             "description": "An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
            },
            "mimeType": {
             "type": "string",
             "description": "The MIME type of the revision."
            },
            "modifiedDate": {
             "type": "string",
             "description": "Last time this revision was modified (formatted RFC 3339 timestamp).",
             "format": "date-time"
            },
            "originalFilename": {
             "type": "string",
             "description": "The original filename when this revision was created. This will only be populated on files with content stored in Drive."
            },
            "pinned": {
             "type": "boolean",
             "description": "Whether this revision is pinned to prevent automatic purging. This will only be populated and can only be modified on files with content stored in Drive which are not Google Docs. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter."
            },
            "publishAuto": {
             "type": "boolean",
             "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Google Docs."
            },
            "published": {
             "type": "boolean",
             "description": "Whether this revision is published. This is only populated and can only be modified for Google Docs."
            },
            "publishedLink": {
             "type": "string",
             "description": "A link to the published revision."
            },
            "publishedOutsideDomain": {
             "type": "boolean",
             "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Google Docs."
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this revision."
            }
           }
          },
          "RevisionList": {
           "id": "RevisionList",
           "type": "object",
           "description": "A list of revisions of a file.",
           "properties": {
            "etag": {
             "type": "string",
             "description": "The ETag of the list."
            },
            "items": {
             "type": "array",
             "description": "The actual list of revisions.",
             "items": {
              "$ref": "Revision"
             }
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#revisionList.",
             "default": "drive#revisionList"
            },
            "selfLink": {
             "type": "string",
             "description": "A link back to this list."
            }
           }
          },
          "User": {
           "id": "User",
           "type": "object",
           "description": "Information about a Drive user.",
           "properties": {
            "displayName": {
             "type": "string",
             "description": "A plain text displayable name for this user."
            },
            "emailAddress": {
             "type": "string",
             "description": "The email address of the user."
            },
            "isAuthenticatedUser": {
             "type": "boolean",
             "description": "Whether this user is the same as the authenticated user for whom the request was made."
            },
            "kind": {
             "type": "string",
             "description": "This is always drive#user.",
             "default": "drive#user"
            },
            "permissionId": {
             "type": "string",
             "description": "The user's ID as visible in the permissions collection."
            },
            "picture": {
             "type": "object",
             "description": "The user's profile picture.",
             "properties": {
              "url": {
               "type": "string",
               "description": "A URL that points to a profile picture of this user."
              }
             }
            }
           }
          }
         },
         "resources": {
          "about": {
           "methods": {
            "get": {
             "id": "drive.about.get",
             "path": "about",
             "httpMethod": "GET",
             "description": "Gets the information about the current user along with Drive API settings",
             "parameters": {
              "includeSubscribed": {
               "type": "boolean",
               "description": "When calculating the number of remaining change IDs, whether to include public files the user has opened and shared files. When set to false, this counts only change IDs for owned files and any shared or public files that the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxChangeIdCount": {
               "type": "string",
               "description": "Maximum number of remaining change IDs to count",
               "default": "1",
               "format": "int64",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start counting from when calculating number of remaining change IDs",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "About"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "apps": {
           "methods": {
            "get": {
             "id": "drive.apps.get",
             "path": "apps/{appId}",
             "httpMethod": "GET",
             "description": "Gets a specific app.",
             "parameters": {
              "appId": {
               "type": "string",
               "description": "The ID of the app.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "appId"
             ],
             "response": {
              "$ref": "App"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.apps.list",
             "path": "apps",
             "httpMethod": "GET",
             "description": "Lists a user's installed apps.",
             "parameters": {
              "appFilterExtensions": {
               "type": "string",
               "description": "A comma-separated list of file extensions for open with filtering. All apps within the given app query scope which can open any of the given file extensions will be included in the response. If appFilterMimeTypes are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "appFilterMimeTypes": {
               "type": "string",
               "description": "A comma-separated list of MIME types for open with filtering. All apps within the given app query scope which can open any of the given MIME types will be included in the response. If appFilterExtensions are provided as well, the result is a union of the two resulting app lists.",
               "default": "",
               "location": "query"
              },
              "languageCode": {
               "type": "string",
               "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
               "location": "query"
              }
             },
             "response": {
              "$ref": "AppList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive.apps.readonly"
             ]
            }
           }
          },
          "changes": {
           "methods": {
            "get": {
             "id": "drive.changes.get",
             "path": "changes/{changeId}",
             "httpMethod": "GET",
             "description": "Gets a specific change.",
             "parameters": {
              "changeId": {
               "type": "string",
               "description": "The ID of the change.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "changeId"
             ],
             "response": {
              "$ref": "Change"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.changes.list",
             "path": "changes",
             "httpMethod": "GET",
             "description": "Lists the changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "spaces": {
               "type": "string",
               "description": "A comma-separated list of spaces to query. Supported values are 'drive', 'appDataFolder' and 'photos'.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "response": {
              "$ref": "ChangeList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            },
            "watch": {
             "id": "drive.changes.watch",
             "path": "changes/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes for a user.",
             "parameters": {
              "includeDeleted": {
               "type": "boolean",
               "description": "Whether to include deleted items.",
               "default": "true",
               "location": "query"
              },
              "includeSubscribed": {
               "type": "boolean",
               "description": "Whether to include public files the user has opened and shared files. When set to false, the list only includes owned files plus any shared or public files the user has explicitly added to a folder they own.",
               "default": "true",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of changes to return.",
               "default": "100",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for changes.",
               "location": "query"
              },
              "spaces": {
               "type": "string",
               "description": "A comma-separated list of spaces to query. Supported values are 'drive', 'appDataFolder' and 'photos'.",
               "location": "query"
              },
              "startChangeId": {
               "type": "string",
               "description": "Change ID to start listing changes from.",
               "format": "int64",
               "location": "query"
              }
             },
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsSubscription": true
            }
           }
          },
          "channels": {
           "methods": {
            "stop": {
             "id": "drive.channels.stop",
             "path": "channels/stop",
             "httpMethod": "POST",
             "description": "Stop watching resources through this channel",
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "children": {
           "methods": {
            "delete": {
             "id": "drive.children.delete",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "DELETE",
             "description": "Removes a child from a folder.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.children.get",
             "path": "files/{folderId}/children/{childId}",
             "httpMethod": "GET",
             "description": "Gets a specific child reference.",
             "parameters": {
              "childId": {
               "type": "string",
               "description": "The ID of the child.",
               "required": true,
               "location": "path"
              },
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId",
              "childId"
             ],
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.children.insert",
             "path": "files/{folderId}/children",
             "httpMethod": "POST",
             "description": "Inserts a file into a folder.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "request": {
              "$ref": "ChildReference"
             },
             "response": {
              "$ref": "ChildReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.children.list",
             "path": "files/{folderId}/children",
             "httpMethod": "GET",
             "description": "Lists a folder's children.",
             "parameters": {
              "folderId": {
               "type": "string",
               "description": "The ID of the folder.",
               "required": true,
               "location": "path"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of children to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "A comma-separated list of sort keys. Valid keys are 'createdDate', 'folder', 'lastViewedByMeDate', 'modifiedByMeDate', 'modifiedDate', 'quotaBytesUsed', 'recency', 'sharedWithMeDate', 'starred', and 'title'. Each key sorts ascending by default, but may be reversed with the 'desc' modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for children.",
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching children.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "folderId"
             ],
             "response": {
              "$ref": "ChildList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "comments": {
           "methods": {
            "delete": {
             "id": "drive.comments.delete",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "DELETE",
             "description": "Deletes a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.comments.get",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "GET",
             "description": "Gets a comment by ID.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.comments.insert",
             "path": "files/{fileId}/comments",
             "httpMethod": "POST",
             "description": "Creates a new comment on the given file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.comments.list",
             "path": "files/{fileId}/comments",
             "httpMethod": "GET",
             "description": "Lists a file's comments.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of discussions to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              },
              "updatedMin": {
               "type": "string",
               "description": "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "CommentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.comments.patch",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing comment. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.comments.update",
             "path": "files/{fileId}/comments/{commentId}",
             "httpMethod": "PUT",
             "description": "Updates an existing comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "Comment"
             },
             "response": {
              "$ref": "Comment"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "files": {
           "methods": {
            "copy": {
             "id": "drive.files.copy",
             "path": "files/{fileId}/copy",
             "httpMethod": "POST",
             "description": "Creates a copy of the specified file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to copy.",
               "required": true,
               "location": "path"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the new copy. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.photos.readonly"
             ]
            },
            "delete": {
             "id": "drive.files.delete",
             "path": "files/{fileId}",
             "httpMethod": "DELETE",
             "description": "Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to delete.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "emptyTrash": {
             "id": "drive.files.emptyTrash",
             "path": "files/trash",
             "httpMethod": "DELETE",
             "description": "Permanently deletes all of the user's trashed files.",
             "scopes": [
              "https://www.googleapis.com/auth/drive"
             ]
            },
            "export": {
             "id": "drive.files.export",
             "path": "files/{fileId}/export",
             "httpMethod": "GET",
             "description": "Exports a Google Doc to the requested MIME type and returns the exported content.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "mimeType": {
               "type": "string",
               "description": "The MIME type of the format requested for this export.",
               "required": true,
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "mimeType"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true
            },
            "generateIds": {
             "id": "drive.files.generateIds",
             "path": "files/generateIds",
             "httpMethod": "GET",
             "description": "Generates a set of file IDs which can be provided in insert requests.",
             "parameters": {
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of IDs to return.",
               "default": "10",
               "format": "int32",
               "minimum": "1",
               "maximum": "1000",
               "location": "query"
              },
              "space": {
               "type": "string",
               "description": "The space in which the IDs can be used to create new files. Supported values are 'drive' and 'appDataFolder'.",
               "default": "drive",
               "location": "query"
              }
             },
             "response": {
              "$ref": "GeneratedIds"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.files.get",
             "path": "files/{fileId}",
             "httpMethod": "GET",
             "description": "Gets a file's metadata by ID.",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Deprecated: Use files.update with modifiedDateBehavior=noChange, updateViewedDate=true and an empty request body.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "useMediaDownloadService": true,
             "supportsSubscription": true
            },
            "insert": {
             "id": "drive.files.insert",
             "path": "files",
             "httpMethod": "POST",
             "description": "Insert a new file.",
             "parameters": {
              "convert": {
               "type": "boolean",
               "description": "Whether to convert this file to the corresponding Google Docs format.",
               "default": "false",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the new file. This parameter is only relevant when convert=false.",
               "default": "DEFAULT",
               "enum": [
                "DEFAULT",
                "PRIVATE"
               ],
               "enumDescriptions": [
                "The visibility of the new file is determined by the user's default visibility/sharing policies.",
                "The new file will be visible to only the owner."
               ],
               "location": "query"
              }
             },
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files"
               }
              }
             },
             "supportsSubscription": true
            },
            "list": {
             "id": "drive.files.list",
             "path": "files",
             "httpMethod": "GET",
             "description": "Lists the user's files.",
             "parameters": {
              "corpus": {
               "type": "string",
               "description": "The body of items (files/documents) to which the query applies.",
               "enum": [
                "DEFAULT",
                "DOMAIN"
               ],
               "enumDescriptions": [
                "The items that the user has accessed.",
                "Items shared to the user's domain."
               ],
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "Maximum number of files to return.",
               "default": "100",
               "format": "int32",
               "minimum": "0",
               "location": "query"
              },
              "orderBy": {
               "type": "string",
               "description": "A comma-separated list of sort keys. Valid keys are 'createdDate', 'folder', 'lastViewedByMeDate', 'modifiedByMeDate', 'modifiedDate', 'quotaBytesUsed', 'recency', 'sharedWithMeDate', 'starred', and 'title'. Each key sorts ascending by default, but may be reversed with the 'desc' modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "Page token for files.",
               "location": "query"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "q": {
               "type": "string",
               "description": "Query string for searching files.",
               "location": "query"
              },
              "spaces": {
               "type": "string",
               "description": "A comma-separated list of spaces to query. Supported values are 'drive', 'appDataFolder' and 'photos'.",
               "location": "query"
              }
             },
             "response": {
              "$ref": "FileList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.files.patch",
             "path": "files/{fileId}",
             "httpMethod": "PATCH",
             "description": "Updates file metadata and/or content. This method supports patch semantics.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "This parameter is deprecated and has no function.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "modifiedDateBehavior": {
               "type": "string",
               "description": "Determines the behavior in which modifiedDate is updated. This overrides setModifiedDate.",
               "enum": [
                "fromBody",
                "fromBodyIfNeeded",
                "fromBodyOrNow",
                "noChange",
                "now",
                "nowIfNeeded"
               ],
               "enumDescriptions": [
                "Set modifiedDate to the value provided in the body of the request. No change if no value was provided.",
                "Set modifiedDate to the value provided in the body of the request depending on other contents of the update.",
                "Set modifiedDate to the value provided in the body of the request, or to the current time if no value was provided.",
                "Maintain the previous value of modifiedDate.",
                "Set modifiedDate to the current time.",
                "Set modifiedDate to the current time depending on contents of the update."
               ],
               "location": "query"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions. For details on how revisions are retained, see the Drive Help Center.",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.scripts"
             ]
            },
            "touch": {
             "id": "drive.files.touch",
             "path": "files/{fileId}/touch",
             "httpMethod": "POST",
             "description": "Set the file's updated time to the current server time.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata"
             ]
            },
            "trash": {
             "id": "drive.files.trash",
             "path": "files/{fileId}/trash",
             "httpMethod": "POST",
             "description": "Moves a file to the trash. The currently authenticated user must own the file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to trash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "untrash": {
             "id": "drive.files.untrash",
             "path": "files/{fileId}/untrash",
             "httpMethod": "POST",
             "description": "Restores a file from the trash.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file to untrash.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.files.update",
             "path": "files/{fileId}",
             "httpMethod": "PUT",
             "description": "Updates file metadata and/or content.",
             "parameters": {
              "addParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to add.",
               "location": "query"
              },
              "convert": {
               "type": "boolean",
               "description": "This parameter is deprecated and has no function.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file to update.",
               "required": true,
               "location": "path"
              },
              "modifiedDateBehavior": {
               "type": "string",
               "description": "Determines the behavior in which modifiedDate is updated. This overrides setModifiedDate.",
               "enum": [
                "fromBody",
                "fromBodyIfNeeded",
                "fromBodyOrNow",
                "noChange",
                "now",
                "nowIfNeeded"
               ],
               "enumDescriptions": [
                "Set modifiedDate to the value provided in the body of the request. No change if no value was provided.",
                "Set modifiedDate to the value provided in the body of the request depending on other contents of the update.",
                "Set modifiedDate to the value provided in the body of the request, or to the current time if no value was provided.",
                "Maintain the previous value of modifiedDate.",
                "Set modifiedDate to the current time.",
                "Set modifiedDate to the current time depending on contents of the update."
               ],
               "location": "query"
              },
              "newRevision": {
               "type": "boolean",
               "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions. For details on how revisions are retained, see the Drive Help Center.",
               "default": "true",
               "location": "query"
              },
              "ocr": {
               "type": "boolean",
               "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
               "default": "false",
               "location": "query"
              },
              "ocrLanguage": {
               "type": "string",
               "description": "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.",
               "location": "query"
              },
              "pinned": {
               "type": "boolean",
               "description": "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.",
               "default": "false",
               "location": "query"
              },
              "removeParents": {
               "type": "string",
               "description": "Comma-separated list of parent IDs to remove.",
               "location": "query"
              },
              "setModifiedDate": {
               "type": "boolean",
               "description": "Whether to set the modified date with the supplied modified date.",
               "default": "false",
               "location": "query"
              },
              "timedTextLanguage": {
               "type": "string",
               "description": "The language of the timed text.",
               "location": "query"
              },
              "timedTextTrackName": {
               "type": "string",
               "description": "The timed text track name.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Whether to update the view date after successfully updating the file.",
               "default": "true",
               "location": "query"
              },
              "useContentAsIndexableText": {
               "type": "boolean",
               "description": "Whether to use the content as indexable text.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "File"
             },
             "response": {
              "$ref": "File"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.scripts"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "5120GB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}"
               }
              }
             }
            },
            "watch": {
             "id": "drive.files.watch",
             "path": "files/{fileId}/watch",
             "httpMethod": "POST",
             "description": "Subscribe to changes on a file",
             "parameters": {
              "acknowledgeAbuse": {
               "type": "boolean",
               "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files.",
               "default": "false",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file in question.",
               "required": true,
               "location": "path"
              },
              "projection": {
               "type": "string",
               "description": "This parameter is deprecated and has no function.",
               "enum": [
                "BASIC",
                "FULL"
               ],
               "enumDescriptions": [
                "Deprecated",
                "Deprecated"
               ],
               "location": "query"
              },
              "revisionId": {
               "type": "string",
               "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
               "location": "query"
              },
              "updateViewedDate": {
               "type": "boolean",
               "description": "Deprecated: Use files.update with modifiedDateBehavior=noChange, updateViewedDate=true and an empty request body.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Channel",
              "parameterName": "resource"
             },
             "response": {
              "$ref": "Channel"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true,
             "useMediaDownloadService": true,
             "supportsSubscription": true
            }
           }
          },
          "parents": {
           "methods": {
            "delete": {
             "id": "drive.parents.delete",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "DELETE",
             "description": "Removes a parent from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.parents.get",
             "path": "files/{fileId}/parents/{parentId}",
             "httpMethod": "GET",
             "description": "Gets a specific parent reference.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "parentId": {
               "type": "string",
               "description": "The ID of the parent.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "parentId"
             ],
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.parents.insert",
             "path": "files/{fileId}/parents",
             "httpMethod": "POST",
             "description": "Adds a parent folder for a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "ParentReference"
             },
             "response": {
              "$ref": "ParentReference"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.parents.list",
             "path": "files/{fileId}/parents",
             "httpMethod": "GET",
             "description": "Lists a file's parents.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "ParentList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            }
           }
          },
          "permissions": {
           "methods": {
            "delete": {
             "id": "drive.permissions.delete",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "DELETE",
             "description": "Deletes a permission from a file.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.permissions.get",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "GET",
             "description": "Gets a permission by ID.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "getIdForEmail": {
             "id": "drive.permissions.getIdForEmail",
             "path": "permissionIds/{email}",
             "httpMethod": "GET",
             "description": "Returns the permission ID for an email address.",
             "parameters": {
              "email": {
               "type": "string",
               "description": "The email address for which to return a permission ID",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "email"
             ],
             "response": {
              "$ref": "PermissionId"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.apps.readonly",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.permissions.insert",
             "path": "files/{fileId}/permissions",
             "httpMethod": "POST",
             "description": "Inserts a permission for a file.",
             "parameters": {
              "emailMessage": {
               "type": "string",
               "description": "A custom message to include in notification emails.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "sendNotificationEmails": {
               "type": "boolean",
               "description": "Whether to send notification emails when sharing to users or groups. This parameter is ignored and an email is sent if the role is owner.",
               "default": "true",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.permissions.list",
             "path": "files/{fileId}/permissions",
             "httpMethod": "GET",
             "description": "Lists a file's permissions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PermissionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.permissions.patch",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PATCH",
             "description": "Updates a permission using patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.permissions.update",
             "path": "files/{fileId}/permissions/{permissionId}",
             "httpMethod": "PUT",
             "description": "Updates a permission.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "permissionId": {
               "type": "string",
               "description": "The ID for the permission.",
               "required": true,
               "location": "path"
              },
              "transferOwnership": {
               "type": "boolean",
               "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
               "default": "false",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "permissionId"
             ],
             "request": {
              "$ref": "Permission"
             },
             "response": {
              "$ref": "Permission"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "properties": {
           "methods": {
            "delete": {
             "id": "drive.properties.delete",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "DELETE",
             "description": "Deletes a property.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata"
             ]
            },
            "get": {
             "id": "drive.properties.get",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "GET",
             "description": "Gets a property by its key.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.properties.insert",
             "path": "files/{fileId}/properties",
             "httpMethod": "POST",
             "description": "Adds a property to a file, or updates it if it already exists.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata"
             ]
            },
            "list": {
             "id": "drive.properties.list",
             "path": "files/{fileId}/properties",
             "httpMethod": "GET",
             "description": "Lists a file's properties.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "PropertyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.properties.patch",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PATCH",
             "description": "Updates a property, or adds it if it doesn't exist. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata"
             ]
            },
            "update": {
             "id": "drive.properties.update",
             "path": "files/{fileId}/properties/{propertyKey}",
             "httpMethod": "PUT",
             "description": "Updates a property, or adds it if it doesn't exist.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "propertyKey": {
               "type": "string",
               "description": "The key of the property.",
               "required": true,
               "location": "path"
              },
              "visibility": {
               "type": "string",
               "description": "The visibility of the property.",
               "default": "private",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "propertyKey"
             ],
             "request": {
              "$ref": "Property"
             },
             "response": {
              "$ref": "Property"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata"
             ]
            }
           }
          },
          "realtime": {
           "methods": {
            "get": {
             "id": "drive.realtime.get",
             "path": "files/{fileId}/realtime",
             "httpMethod": "GET",
             "description": "Exports the contents of the Realtime API data model associated with this file as JSON.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              },
              "revision": {
               "type": "integer",
               "description": "The revision of the Realtime API data model to export. Revisions start at 1 (the initial empty data model) and are incremented with each change. If this parameter is excluded, the most recent data model will be returned.",
               "format": "int32",
               "minimum": "1",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ],
             "supportsMediaDownload": true
            },
            "update": {
             "id": "drive.realtime.update",
             "path": "files/{fileId}/realtime",
             "httpMethod": "PUT",
             "description": "Overwrites the Realtime API data model associated with this file with the provided JSON data model.",
             "parameters": {
              "baseRevision": {
               "type": "string",
               "description": "The revision of the model to diff the uploaded model against. If set, the uploaded model is diffed against the provided revision and those differences are merged with any changes made to the model after the provided revision. If not set, the uploaded model replaces the current model on the server.",
               "location": "query"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file that the Realtime API data model is associated with.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ],
             "supportsMediaUpload": true,
             "mediaUpload": {
              "accept": [
               "*/*"
              ],
              "maxSize": "10MB",
              "protocols": {
               "simple": {
                "multipart": true,
                "path": "/upload/drive/v2/files/{fileId}/realtime"
               },
               "resumable": {
                "multipart": true,
                "path": "/resumable/upload/drive/v2/files/{fileId}/realtime"
               }
              }
             }
            }
           }
          },
          "replies": {
           "methods": {
            "delete": {
             "id": "drive.replies.delete",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "DELETE",
             "description": "Deletes a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.replies.get",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "GET",
             "description": "Gets a reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, this will succeed when retrieving a deleted reply.",
               "default": "false",
               "location": "query"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "insert": {
             "id": "drive.replies.insert",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "POST",
             "description": "Creates a new reply to the given comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "list": {
             "id": "drive.replies.list",
             "path": "files/{fileId}/comments/{commentId}/replies",
             "httpMethod": "GET",
             "description": "Lists all of the replies to a comment.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "includeDeleted": {
               "type": "boolean",
               "description": "If set, all replies, including deleted replies (with content stripped) will be returned.",
               "default": "false",
               "location": "query"
              },
              "maxResults": {
               "type": "integer",
               "description": "The maximum number of replies to include in the response, used for paging.",
               "default": "20",
               "format": "int32",
               "minimum": "0",
               "maximum": "100",
               "location": "query"
              },
              "pageToken": {
               "type": "string",
               "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
               "location": "query"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId"
             ],
             "response": {
              "$ref": "CommentReplyList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.replies.patch",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PATCH",
             "description": "Updates an existing reply. This method supports patch semantics.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.replies.update",
             "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
             "httpMethod": "PUT",
             "description": "Updates an existing reply.",
             "parameters": {
              "commentId": {
               "type": "string",
               "description": "The ID of the comment.",
               "required": true,
               "location": "path"
              },
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "replyId": {
               "type": "string",
               "description": "The ID of the reply.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "commentId",
              "replyId"
             ],
             "request": {
              "$ref": "CommentReply"
             },
             "response": {
              "$ref": "CommentReply"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          },
          "revisions": {
           "methods": {
            "delete": {
             "id": "drive.revisions.delete",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "DELETE",
             "description": "Removes a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "get": {
             "id": "drive.revisions.get",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "GET",
             "description": "Gets a specific revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID of the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "list": {
             "id": "drive.revisions.list",
             "path": "files/{fileId}/revisions",
             "httpMethod": "GET",
             "description": "Lists a file's revisions.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID of the file.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId"
             ],
             "response": {
              "$ref": "RevisionList"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file",
              "https://www.googleapis.com/auth/drive.metadata",
              "https://www.googleapis.com/auth/drive.metadata.readonly",
              "https://www.googleapis.com/auth/drive.photos.readonly",
              "https://www.googleapis.com/auth/drive.readonly"
             ]
            },
            "patch": {
             "id": "drive.revisions.patch",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PATCH",
             "description": "Updates a revision. This method supports patch semantics.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            },
            "update": {
             "id": "drive.revisions.update",
             "path": "files/{fileId}/revisions/{revisionId}",
             "httpMethod": "PUT",
             "description": "Updates a revision.",
             "parameters": {
              "fileId": {
               "type": "string",
               "description": "The ID for the file.",
               "required": true,
               "location": "path"
              },
              "revisionId": {
               "type": "string",
               "description": "The ID for the revision.",
               "required": true,
               "location": "path"
              }
             },
             "parameterOrder": [
              "fileId",
              "revisionId"
             ],
             "request": {
              "$ref": "Revision"
             },
             "response": {
              "$ref": "Revision"
             },
             "scopes": [
              "https://www.googleapis.com/auth/drive",
              "https://www.googleapis.com/auth/drive.appdata",
              "https://www.googleapis.com/auth/drive.file"
             ]
            }
           }
          }
         }
        }
    http_version: 
  recorded_at: Sun, 07 Feb 2016 17:00:00 GMT
- request:
    method: get
    uri: https://www.googleapis.com/drive/v2/files/1h71PBoL_nz2_3fJZ2DH3xRmG-oY820mY7iur9p3Hxao
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.6 Mac OS X/10.11.3
         (gzip)
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.gQJKT9w4FZkxWxDW21Id6ewpbXRmAgH1Y1u4D5K-_aqLnjB0UH2OEkSPTRZtIrcq0a3X
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Sun, 07 Feb 2016 05:12:54 GMT
      Date:
      - Sun, 07 Feb 2016 05:12:54 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"c-g_a-1OtaH-kNQ4WBoXLp3Zv9s/MTQ1NDc4MTI4ODMxNw"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      Content-Encoding:
      - gzip
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alternate-Protocol:
      - 443:quic,p=1
      Alt-Svc:
      - quic=":443"; ma=604800; v="30,29,28,27,26,25"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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
    http_version: 
  recorded_at: Sun, 07 Feb 2016 17:00:00 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/worksheets/1h71PBoL_nz2_3fJZ2DH3xRmG-oY820mY7iur9p3Hxao/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.6 Mac OS X/10.11.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.gQJKT9w4FZkxWxDW21Id6ewpbXRmAgH1Y1u4D5K-_aqLnjB0UH2OEkSPTRZtIrcq0a3X
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      X-Robots-Tag:
      - noarchive
      Expires:
      - Sun, 07 Feb 2016 05:12:55 GMT
      Date:
      - Sun, 07 Feb 2016 05:12:55 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"C0UMSXwyfSt7ImA9XRNXF0U."
      Last-Modified:
      - Sat, 06 Feb 2016 17:54:48 GMT
      Content-Encoding:
      - gzip
      P3p:
      - CP="This is not a P3P policy! See https://support.google.com/accounts/answer/151657?hl=en
        for more info."
      - CP="This is not a P3P policy! See https://support.google.com/accounts/answer/151657?hl=en
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Set-Cookie:
      - NID=76=2xF0EUikB6jS5kD8OPwByfB4KmtvAIkQjuyaBLJNwnPxmOkcgH5mWeJqAIKPTLW0J-gYLIyl2TQTYG9CoHEz6J7J6UwUQgSY84IFb8zi7uyW3__MlfH4ynfrLXyYBxmS;Domain=.google.com;Path=/;Expires=Mon,
        08-Aug-2016 05:12:55 GMT;HttpOnly
      - NID=76=3On4-jer9SZwXEGkROceKeK_ljOY1ud8l3OscY08eZ4F9_f0ZsBpCJ39PygSX4jJpu2NSGe1Mv0hbJkNs7Ha11sz42FzKc6XCsn3mdf0Nd7R2fGGF_Z9u3MMptqavewR;Domain=.google.com;Path=/;Expires=Mon,
        08-Aug-2016 05:12:55 GMT;HttpOnly
      Alternate-Protocol:
      - 443:quic,p=1
      Alt-Svc:
      - quic=":443"; ma=604800; v="30,29,28,27,26,25"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        H4sIAAAAAAAAAOyZa3PaOBSG/4pnMlN/2AHZhthAjLOUDiE7u92GlDTkS0dj
        yUaNbLmSzCW/fmV7uSQtbKG7rGHyCayjy/tKx+dBiXs5i6g2wVwQFrd1s2ro
        Go59hkgctvXhx16loV96boAx0lTPWLT1sZRJC4DpdFqd1qqMh8AyjHPQkSzS
        iz4tluD4FkPuj5fdYbPqswhUgEiwD7IOIu8AzKoJFuPC1fTCH+MIimrIWEhx
        PlYkHEMkxhhLka1pL4ehbcMKfboWohaWULn6BN58TZm86BrDP27vp/PgVjrX
        Uad5P3h/3zOG1SKqey5BXjatyOZdW3t98mxjBJgy/vi3LnPsmB/est8/x0/W
        51rw24P1rl+bDaKrChs1LCMaOSTlzaTWn0EGEk4mUGIQpJS6QC3npglSDciz
        DNOuGFbFsD+aTuu83qo3qlbz/MEFix6urz5Cxuda7hnvuHMS82inIWdLkzrw
        XEkkxd6fcaULKQWd2B8zrg2YhFLlkQuKsEtJ/KhxTNs6pGrBWClWK88TJRYm
        CSV+3h1AlTq/qKPUtTHHQaEq23TE/GeaIHjCQgYkhrH/HZVot83HiORWViL/
        KYfOstPexcB/nzU7GkiYkGU2IDANyqcPplKlt+fGMMLeF+i7IP/mqk0mNGv4
        9UVeuqAIuWAxdFURW1K9JXSARUql8M5dsCm0PkZIyOV1jPDMM5+NWAu4OJaq
        GizLXFHGRn06urtLrq+IKnJh9YDFjaWPTtAId65r6txb2bu5IE5LNWygjgNU
        TN8y6WquMtXLZaHU3uPpslj6LJbqCLdk/0UeKoqQ4P6PvgaUCLnX0e1Vab7d
        CB9TKv7d0plPeThPEyJSSMlTIVmZapw9a+okpDxcCyfkCcivlyFBbbNRd5pW
        3bDs/Y8PzxLGpS8mC4sSzyTInw+K61zGC1dvYJRcBIxHULYzRSWHySIJn+vM
        f4iUVmcoWj6jXZbG0rMaLlh/zoKcTYsH0zDMPLxsURjMkLSBTNc3/qBLQzyc
        5z+/D0kmZL9SaTOVSkkkZJ8Wjfb0c7QkMk4JQMbRcQfZ5WdOoXGdL6a5hTf1
        nWgz6jcHN7POp//hHoScV9qsaPOB4wlhqdBeYkeUkzvOiXFnPz9Hyx3zlLhj
        Hh93nCPgjvMNd2rb7jmN+k7geSduhm9R76p7cPDwWSy/pK/wWcFn0z8qykSc
        4tROizo/4el4yWM3mqZ17tgndfVZuTo6FhVJWH4erXSuM6i+7Spk7ESkqwfU
        u+v1+vODE0kGfuKLVyJ95zr0Ak3lvA0V53dabPoJT8fLJsdp1gy75tRPik1L
        V0fHpiIJy8+mlc4fZtOmP9Plury/AAAA//8DAOoBKJ2BJgAA
    http_version: 
  recorded_at: Sun, 07 Feb 2016 17:00:00 GMT
- request:
    method: get
    uri: https://spreadsheets.google.com/feeds/cells/1h71PBoL_nz2_3fJZ2DH3xRmG-oY820mY7iur9p3Hxao/od6/private/full
    body:
      encoding: UTF-8
      string: ''
    headers:
      User-Agent:
      - |-
        google_drive Ruby library/0.4.0 google-api-ruby-client/0.8.6 Mac OS X/10.11.3
         (gzip)
      Gdata-Version:
      - '3.0'
      Accept-Encoding:
      - gzip
      Content-Type:
      - ''
      Authorization:
      - Bearer ya29.gQJKT9w4FZkxWxDW21Id6ewpbXRmAgH1Y1u4D5K-_aqLnjB0UH2OEkSPTRZtIrcq0a3X
      Cache-Control:
      - no-store
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/atom+xml; charset=UTF-8; type=feed
      X-Robots-Tag:
      - noarchive
      Expires:
      - Sun, 07 Feb 2016 05:12:56 GMT
      Date:
      - Sun, 07 Feb 2016 05:12:56 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Vary:
      - Accept, X-GData-Authorization, GData-Version
      Gdata-Version:
      - '3.0'
      Etag:
      - W/"C0UMSXwyfSt7ImA9XRNXF0U."
      Last-Modified:
      - Sat, 06 Feb 2016 17:54:48 GMT
      Content-Encoding:
      - gzip
      P3p:
      - CP="This is not a P3P policy! See https://support.google.com/accounts/answer/151657?hl=en
        for more info."
      - CP="This is not a P3P policy! See https://support.google.com/accounts/answer/151657?hl=en
        for more info."
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Set-Cookie:
      - NID=76=DJ50Nw8Yo-U0qZB0kEf9lnLdaVObNU1QR6_K36IwtnauXWImZRuMgL0ahhm7r4bgpeHQFopsqlbvL7dQPp5Bj9o9fWMYqSRGVc_W_tzP1KH0mpNfEdBsVYy1ouPSF5WL;Domain=.google.com;Path=/;Expires=Mon,
        08-Aug-2016 05:12:56 GMT;HttpOnly
      - NID=76=e9ud9sG3aFUyQTh24WzT-aALm5rPMIjBiM-KONYVkD_PJ2N6OTH0p9gNWy7v9qksbALQuZMzydSteXDe4WVlGPmODOXe09cQY5HaqvLWcuqD-IQoLqwg1kwk2GNYyt-G;Domain=.google.com;Path=/;Expires=Mon,
        08-Aug-2016 05:12:56 GMT;HttpOnly
      Alternate-Protocol:
      - 443:quic,p=1
      Alt-Svc:
      - quic=":443"; ma=604800; v="30,29,28,27,26,25"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        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
        yRO+5t5xjt5nBMljSfJYlrzy5Uf1CHgsyFs8dbE4nFXyDpKHHiMEyWNR8rhF
        8ryTVEneOlt2MB8NVPKc5A2kBXmMRXkDBMrbPeT6DwAA///s3UFPwkAQBeCf
        wxmiM9OjNTRgkLjVCnJTSEQCCQcN/HwRZI3ZaeL20PUl8xdoXha+t7z+ChM1
        ojy5+L6Rdxlvefms7dfGkFmet7wwbUhDeYRgeaRZHtXcyYscyjtaXnXjWk+Q
        Wd7Z8sIEIU0eE4LlkWZ5pFte7OTx8VaeW08SvHuJzPK85aGnCMDySLM80i2v
        QYpclY+rBLfyyCzPW16YotViAZQiAMsjzfJIt7zDh985PYEIy9uXowS38sgs
        78fy0GOEYHmkWh7VWF50kgaVKx+L6wQqzmZ53vJYsbxeD8vyGMHyWLM8bmR5
        Wfdkef45/VkiPib7q5FrVyLYLM9bXpg2pJkvRrA81iyPdcuLnfk6JIgm/dth
        yzdb2SzPW16YIKSJL0awPNYsj3XLi5/46s6L5Xac5FufjbaeR1vRzyGA0VbW
        RltZH21tMDd5V7xmaX47mYifRRz9LAIQcdZEnHURbzA3OSvWs6Jsv1diG231
        o63oZxHAaCtro62sj7Y2OIvcNH8vk6TIeqVzrxSmaLXB2UxhhF6JtV6Ja3ql
        zbxzegJ/75WmxWKY4KW0bL3ST6+EHiOEXonVXonreqXYJH31SrvufYLzSKxX
        8r2SaL1ShtUrCUKvJFqvJM16JfnulbL4XinvO/fWqoqL9Uq+VwrThrSYJwi9
        kmi9kui9Uuxi3rFXenQv9+02s2K9ku+VwgQBDR8LQq0kWq0kNXMPUcPHx7GH
        fOsS/C1QjMM9h4NHCEDDRdNwqdl6iI2Qm+661wk28sQUzyteGKHt8zNQhgAU
        TzTFE13xDh9+5/QEIhRv+fSQ5CAyxfOKhx4jBMUTVfGkRvGikzSo3IN7Lwft
        n0fZf1S8TwAAAP//7N3RatswFAbgx/HlfJSucC7n1g6lBJbMCaF3a1M8VkOg
        MLLHnxTbKo2OIfJAyQ/nDSwdflp/kX5fSPE4CJL5Alb0wAiIxxLi8RTEu8m/
        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
        PjxwAwA=
    http_version: 
  recorded_at: Sun, 07 Feb 2016 17:00:00 GMT
recorded_with: VCR 3.0.1
